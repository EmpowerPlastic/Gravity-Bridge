syntax = "proto3";
package orbit.v1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Gravity-Bridge/Gravity-Bridge/module/x/orbit/types";

// Msg defines the state transitions possible within orbit
service Msg {
  rpc CreateVestingAccount(MsgCreateVestingAccount) returns (MsgCreateVestingAccountResponse) {
    option (google.api.http).post = "/orbit/v1/create_vesting_account";
  }
}

// MsgCreateVestingAccount defines a message that enables creating a vesting account **with a delayed start time**
message MsgCreateVestingAccount {
  option (gogoproto.equal) = true;

  string   from_address                    = 1 [(gogoproto.moretags) = "yaml:\"from_address\""];
  string   to_address                      = 2 [(gogoproto.moretags) = "yaml:\"to_address\""];
  repeated cosmos.base.v1beta1.Coin amount = 3
  [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];

  int64 end_time    = 4 [(gogoproto.moretags) = "yaml:\"end_time\""];
  int64 start_time  = 5 [(gogoproto.moretags) = "yaml:\"start_time\""];
}

message MsgCreateVestingAccountResponse {}

